#!/usr/bin/env python3

from dynamic_reconfigure.parameter_generator_catkin import (
    ParameterGenerator,
    double_t,
    bool_t,
)

gen = ParameterGenerator()

#stiffness
gen.add("stiffness", bool_t, 0, "Stiffness parameter for Cartesian Impedance Control", True)

group_translation_s = gen.add_group("Set translational stiffness", type="hidden")
group_rotation_s = gen.add_group("Set rotational stiffness", type="hidden")

group_translation_s.add("translation_x_s", double_t, 0, "translational stiffness", 0.1, 0, 100)
group_translation_s.add("translation_y_s", double_t, 0, "translational stiffness", 0, 0, 100)
group_translation_s.add("translation_z_s", double_t, 0, "translational stiffness", 0, 0, 100)

group_rotation_s.add("rotation_x_s", double_t, 0, "rotational stiffness", 0.1, 0, 10)
group_rotation_s.add("rotation_y_s", double_t, 0, "rotational stiffness", 0.1, 0, 10)
group_rotation_s.add("rotation_z_s", double_t, 0, "rotational stiffness", 0.1, 0, 10)

#damping
gen.add("damping_factors", bool_t, 0, "Damping parameter for Cartesian Impedance Control", True)

group_translation_d = gen.add_group("Set translational damping factors", type="hidden")
group_rotation_d = gen.add_group("Set rotational damping factors", type="hidden")
group_translation_d.add("translation_x_d", double_t, 0, "translational damping", 0, 0, 1)
group_translation_d.add("translation_y_d", double_t, 0, "translational damping", 0, 0, 1)
group_translation_d.add("translation_z_d", double_t, 0, "translational damping", 0, 0, 1)

group_rotation_d.add("rotation_x_d", double_t, 0, "rotational damping", 0, 0, 1)
group_rotation_d.add("rotation_y_d", double_t, 0, "rotational damping", 0, 0, 1)
group_rotation_d.add("rotation_z_d", double_t, 0, "rotational damping", 0, 0, 1)

exit(gen.generate('baxter_interface', 'position_imp','CartesianImpedanceGain'))
